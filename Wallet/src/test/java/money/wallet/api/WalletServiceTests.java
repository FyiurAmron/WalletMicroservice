package money.wallet.api;

import money.wallet.api.dto.WalletAmount;
import money.wallet.api.dto.WalletOperation;
import money.wallet.api.dto.WalletOperationType;
import money.wallet.api.dto.WalletResponse;
import money.wallet.api.service.RepositoryWalletService;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.annotation.DirtiesContext;

import javax.persistence.EntityNotFoundException;

import static org.junit.jupiter.api.Assertions.*;

@SpringBootTest
@AutoConfigureTestDatabase
@DirtiesContext( classMode = DirtiesContext.ClassMode.BEFORE_EACH_TEST_METHOD )
public class WalletServiceTests {
    @Autowired
    private RepositoryWalletService walletService;

    @Test
    public void isWalletCreatedEmpty() {
        WalletResponse createWalletResponse = walletService.createWallet();

        assertEquals(
                new WalletOperation( WalletOperationType.CREATE ),
                createWalletResponse.operation()
        );
        assertEquals(
                null,
                createWalletResponse.beforeOp()
        );
        assertEquals(
                WalletAmount.ZERO,
                createWalletResponse.afterOp()
        );
    }

    @Test
    public void isWalletBalanceZeroAfterCreation() {
        WalletResponse createWalletResponse = walletService.createWallet();
        WalletResponse balanceWalletResponse = walletService.getBalance( createWalletResponse.walletId() );

        assertEquals(
                new WalletOperation( WalletOperationType.BALANCE ),
                balanceWalletResponse.operation()
        );
        assertEquals(
                WalletAmount.ZERO,
                balanceWalletResponse.beforeOp()
        );
        assertEquals(
                WalletAmount.ZERO,
                balanceWalletResponse.afterOp()
        );
    }

    @Test
    public void throwsWhenWalletNotYetCreated() {
        assertThrows( EntityNotFoundException.class, () -> {
            walletService.getBalance( 1 ); // id=1 would be the 1st one autogenerated
        } );
    }

    /*
    @Test
    public void isWalletRemoved() {
    }
    */
}
